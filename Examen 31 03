#include <iostream>
#include <conio.h>

using namespace std;

struct tVector{
	int svec [20];
	int nSvec;
};

void cargar(tVector vec[],int n);
void mostrar(tVector vec[], int n);
void ordenarTodo(tVector vec[],int n);
void Burbuja (int vec[],int n);

void main(){
	int n;
	tVector vec [20];
	cout << "Introduzca la Dimension de los Vectores: ";
	cin >> n;
	cargar(vec,n);
	mostrar(vec,n);
	getch();
}

void cargar(tVector vec[], int n){
	int i,k,band=0,sube=0,baja=n-1;
	for(i=0;i<n;i++){
		if(band==0){
			for(k=0;k<=n/2;k++){
				vec[i].svec[k] = impar;
				impar++;
				band = 1;
			}
		}
		if(band==1){
			for(k=n;k>n/2;k--){
				vec[i].svec[k] = par;
				par=par+2;
				band=0;
			}
		}
	}
}



void mostrar(tVector vec[], int n){
	int i,k;
	for(i=0;i<n;i++){
		for(k=0;k<n;k++){
			cout << vec[i].svec[k] << "   " ;
		}
		cout << "   ";
	}
}

void ordenarTodo(tVector vec[], int n){
	int i,k,vAux[50],nAux=0;
	for(i=0;i<n;i++){
		for(k=0;k<n;k++){
			vAux[nAux++] = vec[i].svec[k];
		}
	}
	Burbuja (vAux,nAux);
	nAux=0;
	for(i=0;i<n;i++){
		for(k=0;k<n;k++){
			vec[i].svec[k] = vAux[nAux++];
		}
	}
}

void Burbuja (int vec[],int n){
	int i,j,temp;
	for(i=0;i<n-1;i++){
		for(j=i;j<n;j++){
			if(vec[i]>vec[j]){
				temp	= vec[i];
				vec[i]  = vec[j];
				vec[j]  = temp;
			}
		}
	}
}

void cargarEspiral(int vec[],int n){
	int i, band=0, sube=0, baja=n-1;
	for (i=1;i<=n;i++){
		if(band==0){
			vec[sube++] = i;
			band = 1;
		}else{
			vec[baja--] = i;
			band = 0;
		}
	}
}
